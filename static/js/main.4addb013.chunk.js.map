{"version":3,"sources":["ParticleFire/util.js","ParticleFire/Particle.js","ParticleFire/shaders/particle.vert","ParticleFire/shaders/particle.frag","OrbitContorls.js","App.js","reportWebVitals.js","index.js"],"names":["rgbArrToThreeColor","rgb","map","v","Three","MAXIMUM_PARTICLE_NUM","DEFAULT_FADING_SPEED","DEFAULT_RGB","ParticleOptions","size","default","min","max","sizeVarience","speed","speedVarience","centrality","fadingSpeed","color","PARTICLE_STATE","ParticleFire","options","setAttr","key","val","hasOwnProperty","material","uniforms","value","bulkSetAttrs","k","setParticleNum","num","particleNum","i","particleState","alpha","init","appendParticle","particleNumber","index","particle","createParticle","position","x","y","z","vel","vec","ang","Math","PI","phi","random","randFloatSpread","theta","randFloat","sin","cos","randomStart","xrad","zrad","normalize","randomParticleVel","update","elapsed","pos","particleSystem","geometry","attributes","array","elapsedMs","prevElapsed","numShouldGen","fadeFactor","length","tanh","needsUpdate","this","Float32Array","Uint8Array","time","center","setAttribute","texture","loadTexture","wrapS","wrapT","minFilter","tex","vertexShader","fragmentShader","blending","depthTest","transparent","blendSrc","blendDst","name","load","process","_changeEvent","type","_startEvent","_endEvent","OrbitControls","object","domElement","undefined","console","warn","document","error","style","touchAction","enabled","target","Vector3","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MOUSE","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TOUCH","TWO","DOLLY_PAN","target0","clone","position0","zoom0","zoom","_domElementKeyEvents","getPolarAngle","spherical","getAzimuthalAngle","getDistance","distanceTo","listenToKeyEvents","addEventListener","onKeyDown","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","state","STATE","NONE","offset","quat","Quaternion","setFromUnitVectors","up","quatInverse","invert","lastPosition","lastQuaternion","twoPI","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","isFinite","makeSafe","radius","scale","addScaledVector","panOffset","add","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","removeEventListener","onContextMenu","onPointerDown","onPointerCancel","onMouseWheel","onPointerMove","onPointerUp","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","Spherical","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","getZoomScale","pow","angle","rotateUp","panLeft","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","event","clientX","clientY","handleMouseDownPan","handleTouchStartRotate","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchMoveRotate","getSecondPointerPosition","subVectors","handleTouchMovePan","handleTouchMoveDolly","setPointerCapture","pointerId","push","addPointer","pointerType","trackPointer","DOLLY_ROTATE","onTouchStart","mouseAction","button","handleMouseDownDolly","ctrlKey","metaKey","shiftKey","onMouseDown","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","onTouchMove","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","onMouseMove","removePointer","releasePointerCapture","preventDefault","handleMouseWheel","code","handleKeyDown","splice","pointer","passive","EventDispatcher","App","props","configGUI","gui","dat","addColor","show","scene","camera","window","innerWidth","innerHeight","renderer","antialias","clock","start","stats","Stat","showPanel","body","appendChild","dom","setSize","setClearColor","querySelector","orbitControl","particleFire","Particle","animate","begin","getElapsedTime","render","end","requestAnimationFrame","onresize","id","React","PureComponent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4addb013.chunk.js","sourcesContent":["import * as Three from 'three';\n\nconst randomDest = () => {\n  const randomEnd = new Three.Vector3();\n  randomEnd.x = Three.MathUtils.randFloatSpread(2);\n  randomEnd.z = Three.MathUtils.randFloatSpread(2);\n  randomEnd.y = 10;\n  return randomEnd;\n}\n\n// start is a sphere\nconst randomStart = () => {\n  const vec = new Three.Vector3();\n  const radius = 3;\n  const ang =  2 * Math.PI ;\n  const phi = Math.random() * ang + Three.MathUtils.randFloatSpread(0.2 * Math.PI);\n  const theta = Math.random() * ang + Three.MathUtils.randFloatSpread(0.2 * Math.PI);\n\n  vec.x = Three.MathUtils.randFloat(0, radius * Math.sin(phi) * Math.cos(theta));\n  vec.y = 0.2 * Three.MathUtils.randFloat(0, radius * Math.cos(phi));\n  vec.z = Three.MathUtils.randFloat(0, radius * Math.sin(phi) * Math.sin(theta));\n  return vec;\n}\n\nconst randomParticleVel = (centrality) => {\n  const vec = new Three.Vector3();\n  const xrad = 2 * Math.PI * Math.random() + Three.MathUtils.randFloatSpread(0.4 * Math.PI);\n  const zrad = 2 * Math.PI * Math.random() + Three.MathUtils.randFloatSpread(0.4 * Math.PI);\n  vec.x = Math.cos(xrad);\n  vec.y = centrality;\n  vec.z = Math.sin(zrad);\n  vec.normalize();\n  return vec;\n}\n\nconst random2DVec = (start, end) => {\n  const pos = start.clone();\n  const vec = new Three.Vector3().subVectors(end, start);\n  vec.multiplyScalar(Math.random());\n  pos.add(vec);\n  return pos;\n};\n\nconst unitDirection = (start, end) => {\n  return new Three.Vector3().subVectors(end, start).normalize();\n};\n\nconst rgbArrToThreeColor = (rgb) => {\n  rgb = rgb.map(v => v / 256);\n  return new Three.Color(rgb[0], rgb[1], rgb[2]);\n};\n\nexport {\n  randomDest,\n  randomStart,\n  random2DVec,\n  randomParticleVel,\n  unitDirection,\n  rgbArrToThreeColor\n};\n","import * as Three from 'three';\n\nimport {\n  randomStart,\n  randomDest,\n  random2DVec,\n  randomParticleVel,\n  unitDirection,\n  rgbArrToThreeColor,\n} from './util';\n\nimport vertexShader from './shaders/particle.vert';\nimport fragmentShader from './shaders/particle.frag';\n\nconst MINIMUM_PARTICLE_NUM = 100;\nconst MAXIMUM_PARTICLE_NUM = 6000;\nconst DEFAULT_PARTICLE_NUM = 3000;\n\nconst MAXIMUM_LIFETIME = 1;\n\nconst DEFAULT_SIZE = 0.6;\nconst MINIMUM_SIZE = 0.01\nconst MAXIMUM_SIZE = 1;\n\nconst DEFAULT_SIZE_VARIANCE = 0.2;\nconst MAX_SIZE_VARIANCE = 0.5;\nconst MIN_SIZE_VARIANCE = 0.01;\n\nconst DEFUALT_ALPHA = 0.6;\n\nconst DEFAULT_SPEED = 120;\nconst MAX_SPEED = 200;\nconst MIN_SPEED = 50;\n\n\nconst DEFAULT_SPEED_VARIANCE = 100;\nconst MAX_SPEED_VARIANCE = 100;\nconst MIN_SPEED_VARIANCE = 0;\n\nconst DEFAULT_FADING_SPEED = 0.0085;\nconst MAXIMUM_FADING_SPEED = 0.03;\nconst MINIMUM_FADING_SPEED = 0.001;\n\nconst MIN_CENTRALITY = 1;\nconst DEFAULT_CENTRALITY = 5;\nconst MAX_CENTRALITY = 10;\n\nconst DEFAULT_RGB = [245.82, 102, 25];\n\nconst DEFAULT_FIRE_HEIGHT = 10;\n\n// per second\nconst DEFAULT_PARTICLE_SPAWN_SPEED = 1600;\n\nconst ParticleOptions = {\n  // particleNum: {\n  //   default: MAXIMUM_PARTICLE_NUM,\n  //   max: MAXIMUM_PARTICLE_NUM,\n  //   min: MINIMUM_PARTICLE_NUM,\n  // },\n  size: {\n    default: DEFAULT_SIZE,\n    min: MINIMUM_SIZE,\n    max: MAXIMUM_SIZE,\n  },\n  sizeVarience: {\n    default: DEFAULT_SIZE_VARIANCE,\n    min: MIN_SIZE_VARIANCE,\n    max: MAX_SIZE_VARIANCE,\n  },\n  speed: {\n    default: DEFAULT_SPEED,\n    min: MIN_SPEED,\n    max: MAX_SPEED,\n  },\n  speedVarience: {\n    default: DEFAULT_SPEED_VARIANCE,\n    min: MIN_SPEED_VARIANCE,\n    max: MAX_SPEED_VARIANCE,\n  },\n  centrality: {\n    default: DEFAULT_CENTRALITY,\n    min: MIN_CENTRALITY,\n    max: MAX_CENTRALITY,\n  },\n  fadingSpeed: {\n    default: DEFAULT_FADING_SPEED,\n    min: MINIMUM_FADING_SPEED,\n    max: MAXIMUM_FADING_SPEED,\n  },\n  color: {\n    default: DEFAULT_RGB,\n  },\n};\n\nconst PARTICLE_STATE = {\n  DEACTIVE: 0,\n  ACTIVE: 1,\n};\n\nconst defaultTexture = 'gradient.png';\n\nexport default class ParticleFire {\n  constructor(options) {\n    this.options = {\n      size: DEFAULT_SIZE,\n      sizeVarience: DEFAULT_SIZE_VARIANCE,\n      speed: DEFAULT_SPEED,\n      speedVarience: DEFAULT_SPEED_VARIANCE,\n      fadingSpeed: DEFAULT_FADING_SPEED,\n      particleNum: DEFAULT_PARTICLE_NUM,\n      centrality: DEFAULT_CENTRALITY,\n      color: DEFAULT_RGB,\n    };\n\n    this.bulkSetAttrs(options);\n\n    this.position = new Float32Array(MAXIMUM_PARTICLE_NUM * 3);\n    this.vel = new Float32Array(MAXIMUM_PARTICLE_NUM * 3);\n    this.size = new Float32Array(MAXIMUM_PARTICLE_NUM);\n    this.speed = new Float32Array(MAXIMUM_PARTICLE_NUM);\n    this.alpha = new Float32Array(MAXIMUM_PARTICLE_NUM);\n    this.particleState = new Uint8Array(MAXIMUM_PARTICLE_NUM);\n\n    this.prevElapsed = 0;\n    this.time = 0;\n    this.particleNumber = 0;\n    this.numShouldGen = 0.0;\n\n    this.init();\n\n    this.center = new Three.Vector3(0, 0, 0);\n    this.geometry = new Three.BufferGeometry();\n\n    this.geometry.setAttribute('position', new Three.BufferAttribute(this.position, 3));\n    this.geometry.setAttribute('size', new Three.BufferAttribute(this.size, 1));\n    this.geometry.setAttribute('alpha', new Three.BufferAttribute(this.alpha, 1));\n\n    const texture = this.loadTexture(defaultTexture);\n    texture.wrapS = Three.ClampToEdgeWrapping;\n    texture.wrapT = Three.ClampToEdgeWrapping;\n    texture.minFilter = Three.LinearFilter;\n    const uniforms = {\n      tex : {\n        value: texture,\n      },\n      color: {\n        value: rgbArrToThreeColor(this.options.color),\n      }\n    };\n\n    this.material = new Three.ShaderMaterial({\n      vertexShader,\n      fragmentShader,\n      uniforms,\n      blending: Three.CustomBlending,\n\t\t\tdepthTest: false,\n\t\t\ttransparent: true\n    });\n\n    this.material.blending = Three.CustomBlending;\n    this.material.blendSrc = Three.SrcAlphaFactor;\n    this.material.blendDst = Three.DstAlphaFactor;\n\n    this.particleSystem = new Three.Points(this.geometry, this.material);\n  }\n\n  setAttr = (key, val) => {\n    if (this.options.hasOwnProperty(key) && val && this.options[key] !== val) {\n      if (key === 'color') {\n        this.options[key] = rgbArrToThreeColor(val);\n        this.material.uniforms.color.value = this.options[key];\n      } else {\n        this.options[key] = val;\n      }\n    }\n  }\n\n  bulkSetAttrs = (options) => {\n    for (let k in options) {\n      this.setAttr(k, options[k]);\n    }\n  }\n\n  setParticleNum = (num) => {\n    if (num !== this.options.particleNum) {\n      for (let i = 0; i < MAXIMUM_PARTICLE_NUM; i++) {\n        if (i < num && this.particleState[i] === PARTICLE_STATE.DEACTIVE) {\n          this.particleState[i] = PARTICLE_STATE.ACTIVE;\n          this.alpha[i] = 0;\n        }\n        if (i >= num && this.particleState[i] === PARTICLE_STATE.ACTIVE) {\n          this.particleState[i] = PARTICLE_STATE.DEACTIVE;\n          this.alpha[i] = 0;\n        }\n      }\n      this.options.particleNum = num;\n    }\n  }\n\n  loadTexture(name) {\n    const loader = new Three.TextureLoader();\n    return loader.load(`${process.env.PUBLIC_URL}/${name}`);\n  }\n\n  init = () => {\n    for (let i = 0;i < MAXIMUM_PARTICLE_NUM; i++) {\n      this.alpha[i] = 0;\n      this.particleState[i] = PARTICLE_STATE.DEACTIVE;\n    }\n  }\n\n  appendParticle = () => {\n    const i = this.particleNumber;\n    this.particleState[i] = PARTICLE_STATE.ACTIVE;\n\n    let index = i * 3;\n    const particle = this.createParticle();\n\n    this.position[index] = particle.position.x;\n    this.position[index + 1] = particle.position.y;\n    this.position[index + 2] = particle.position.z;\n\n    this.vel[index] = particle.vel.x;\n    this.vel[index + 1] = particle.vel.y;\n    this.vel[index + 2] = particle.vel.z;\n\n    this.size[i] = particle.size;\n    this.speed[i] = particle.speed;\n    this.alpha[i] = DEFUALT_ALPHA;\n    this.particleNumber += 1;\n}\n\n  createParticle = () => {\n    const start = randomStart();\n    const vel = randomParticleVel(this.options.centrality);\n    const speed = this.options.speed + Three.MathUtils.randFloatSpread(this.options.speedVarience);\n    const size = this.options.size + Three.MathUtils.randFloatSpread(this.options.sizeVarience);\n    return {\n      position: start,\n      vel, \n      speed,\n      size,\n    };\n  }\n\n  update = (elapsed) => {\n    const pos = this.particleSystem.geometry.attributes.position.array;\n    const alpha = this.particleSystem.geometry.attributes.alpha.array;\n    const elapsedMs = elapsed - this.prevElapsed;\n    this.prevElapsed = elapsed;\n\n    if (this.particleNumber < this.options.particleNum) {\n      this.numShouldGen += elapsedMs * DEFAULT_PARTICLE_SPAWN_SPEED;\n      while (this.numShouldGen > 0.0) {\n        this.appendParticle();\n        this.numShouldGen -= 1.0;\n      }\n    }\n\n    for(let i = 0;i < this.particleNumber; i++) {\n      let index = i * 3;\n\n      if (alpha[i] <= 0) {\n        const particle = this.createParticle();\n\n        pos[index] = particle.position.x;\n        pos[index + 1] = particle.position.y;\n        pos[index + 2] = particle.position.z;  \n\n        this.vel[index] = particle.vel.x;\n        this.vel[index + 1] = particle.vel.y;\n        this.vel[index + 2] = particle.vel.z;\n\n        this.speed[i] = particle.speed;\n        this.size[i] = particle.size;\n        alpha[i] = 0.6;\n      } else {\n        const speed = this.speed[i] / 1000;\n\n        pos[index] += this.vel[index] * speed;\n        pos[index + 1] += this.vel[index + 1] * speed;\n        pos[index + 2] += this.vel[index + 2] * speed;\n\n        const fadeFactor = new Three.Vector2(pos[index], pos[index + 2]).length();\n        alpha[i] -= this.options.fadingSpeed + Math.tanh(1.5 * fadeFactor) * 0.01;\n      }\n    }\n\n    this.particleSystem.geometry.attributes.size.needsUpdate = true;\n    this.particleSystem.geometry.attributes.position.needsUpdate = true;\n    this.particleSystem.geometry.attributes.alpha.needsUpdate = true;\n  }\n}\n\nexport {\n  ParticleOptions\n};\n","export default \"attribute float size;\\nattribute float alpha;\\n\\nvarying float v_alpha;\\n\\nvoid main() {\\n    vec4 mvPos = modelViewMatrix * vec4(position, 1.0);\\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n    gl_PointSize = 600.0 * size / length(mvPos.xyz);\\n    v_alpha = alpha;\\n}\";","export default \"uniform sampler2D tex;\\nuniform vec3 color;\\nvarying float v_alpha;\\n\\nvoid main() {\\n    gl_FragColor = vec4(color, v_alpha) * texture2D(tex, gl_PointCoord);\\n}\";","import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3\n} from 'three';\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\n\nclass OrbitControls extends EventDispatcher {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper();\n\n\t\tif ( domElement === undefined ) console.warn( 'THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.' );\n\t\tif ( domElement === document ) console.error( 'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.' );\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t//\n\t\t// public methods\n\t\t//\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn spherical.phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn spherical.theta;\n\n\t\t};\n\n\t\tthis.getDistance = function () {\n\n\t\t\treturn this.object.position.distanceTo( this.target );\n\n\t\t};\n\n\t\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = domElement;\n\n\t\t};\n\n\t\tthis.saveState = function () {\n\n\t\t\tscope.target0.copy( scope.target );\n\t\t\tscope.position0.copy( scope.object.position );\n\t\t\tscope.zoom0 = scope.object.zoom;\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\tscope.update();\n\n\t\t\tstate = STATE.NONE;\n\n\t\t};\n\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\n\t\tthis.update = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tconst quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\t\tconst quatInverse = quat.clone().invert();\n\n\t\t\tconst lastPosition = new Vector3();\n\t\t\tconst lastQuaternion = new Quaternion();\n\n\t\t\tconst twoPI = 2 * Math.PI;\n\n\t\t\treturn function update() {\n\n\t\t\t\tconst position = scope.object.position;\n\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t}\n\n\t\t\t\t// restrict theta to be between desired limits\n\n\t\t\t\tlet min = scope.minAzimuthAngle;\n\t\t\t\tlet max = scope.maxAzimuthAngle;\n\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\t\tspherical.makeSafe();\n\n\n\t\t\t\tspherical.radius *= scale;\n\n\t\t\t\t// restrict radius to be between desired limits\n\t\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t\t// move target to panned location\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\t}\n\n\t\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tzoomChanged = false;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function () {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\tscope.domElement.removeEventListener( 'pointercancel', onPointerCancel );\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\n\t\t\t}\n\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t};\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tconst scope = this;\n\n\t\tconst STATE = {\n\t\t\tNONE: - 1,\n\t\t\tROTATE: 0,\n\t\t\tDOLLY: 1,\n\t\t\tPAN: 2,\n\t\t\tTOUCH_ROTATE: 3,\n\t\t\tTOUCH_PAN: 4,\n\t\t\tTOUCH_DOLLY_PAN: 5,\n\t\t\tTOUCH_DOLLY_ROTATE: 6\n\t\t};\n\n\t\tlet state = STATE.NONE;\n\n\t\tconst EPS = 0.000001;\n\n\t\t// current position in spherical coordinates\n\t\tconst spherical = new Spherical();\n\t\tconst sphericalDelta = new Spherical();\n\n\t\tlet scale = 1;\n\t\tconst panOffset = new Vector3();\n\t\tlet zoomChanged = false;\n\n\t\tconst rotateStart = new Vector2();\n\t\tconst rotateEnd = new Vector2();\n\t\tconst rotateDelta = new Vector2();\n\n\t\tconst panStart = new Vector2();\n\t\tconst panEnd = new Vector2();\n\t\tconst panDelta = new Vector2();\n\n\t\tconst dollyStart = new Vector2();\n\t\tconst dollyEnd = new Vector2();\n\t\tconst dollyDelta = new Vector2();\n\n\t\tconst pointers = [];\n\t\tconst pointerPositions = {};\n\n\t\tfunction getAutoRotationAngle() {\n\n\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction rotateLeft( angle ) {\n\n\t\t\tsphericalDelta.theta -= angle;\n\n\t\t}\n\n\t\tfunction rotateUp( angle ) {\n\n\t\t\tsphericalDelta.phi -= angle;\n\n\t\t}\n\n\t\tconst panLeft = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tconst panUp = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t\t}\n\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// deltaX and deltaY are in pixels; right and down are positive\n\t\tconst pan = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\t\tconst element = scope.domElement;\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t// perspective\n\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\tlet targetDistance = offset.length();\n\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t// orthographic\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}();\n\n\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\t\t// event callbacks - update the object state\n\t\t//\n\n\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseWheel( event ) {\n\n\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleKeyDown( event ) {\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tswitch ( event.code ) {\n\n\t\t\t\tcase scope.keys.UP:\n\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction handleTouchStartRotate() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\trotateStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\trotateStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartPan() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\tpanStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartDolly() {\n\n\t\t\tconst dx = pointers[ 0 ].pageX - pointers[ 1 ].pageX;\n\t\t\tconst dy = pointers[ 0 ].pageY - pointers[ 1 ].pageY;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyPan() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enablePan ) handleTouchStartPan();\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyRotate() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate();\n\n\t\t}\n\n\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\tif ( pointers.length == 1 ) {\n\n\t\t\t\trotateEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\trotateEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\tpanEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\tconst dx = event.pageX - position.x;\n\t\t\tconst dy = event.pageY - position.y;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyOut( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t\t}\n\n\t\t//\n\t\t// event handlers - FSM: listen for events and reset state\n\t\t//\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.setPointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.addEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\taddPointer( event );\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchStart( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseDown( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchMove( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseMove( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerUp( event ) {\n\n\t\t    removePointer( event );\n\n\t\t    if ( pointers.length === 0 ) {\n\n\t\t        scope.domElement.releasePointerCapture( event.pointerId );\n\n\t\t        scope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t        scope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t    }\n\n\t\t    scope.dispatchEvent( _endEvent );\n\n\t\t    state = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onPointerCancel( event ) {\n\n\t\t\tremovePointer( event );\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tlet mouseAction;\n\n\t\t\tswitch ( event.button ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tmouseAction = - 1;\n\n\t\t\t}\n\n\t\t\tswitch ( mouseAction ) {\n\n\t\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.PAN:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\thandleMouseWheel( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\t\thandleKeyDown( event );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( pointers.length ) {\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onContextMenu( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\tfunction addPointer( event ) {\n\n\t\t\tpointers.push( event );\n\n\t\t}\n\n\t\tfunction removePointer( event ) {\n\n\t\t\tdelete pointerPositions[ event.pointerId ];\n\n\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\n\n\t\t\t\tif ( pointers[ i ].pointerId == event.pointerId ) {\n\n\t\t\t\t\tpointers.splice( i, 1 );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction trackPointer( event ) {\n\n\t\t\tlet position = pointerPositions[ event.pointerId ];\n\n\t\t\tif ( position === undefined ) {\n\n\t\t\t\tposition = new Vector2();\n\t\t\t\tpointerPositions[ event.pointerId ] = position;\n\n\t\t\t}\n\n\t\t\tposition.set( event.pageX, event.pageY );\n\n\t\t}\n\n\t\tfunction getSecondPointerPosition( event ) {\n\n\t\t\tconst pointer = ( event.pointerId === pointers[ 0 ].pointerId ) ? pointers[ 1 ] : pointers[ 0 ];\n\n\t\t\treturn pointerPositions[ pointer.pointerId ];\n\n\t\t}\n\n\t\t//\n\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.addEventListener( 'pointercancel', onPointerCancel );\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\n\n\t\t// force an update at start\n\n\t\tthis.update();\n\n\t}\n\n}\n\nexport default OrbitControls;","import React from 'react';\nimport * as Three from 'three';\nimport Stat from 'stats.js';\nimport * as dat from 'dat.gui';\n\nimport { Particle } from './ParticleFire';\nimport {\n  ParticleOptions\n} from './ParticleFire/Particle';\n\nimport OrbitControls from './OrbitContorls';\n\nclass App extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.options = {};\n    for (let key in ParticleOptions) {\n      this.options[key] = ParticleOptions[key].default;\n    }\n  }\n\n  componentDidMount() {\n\n    const gui = this.configGUI();\n\n    gui.show();\n\n    const scene = new Three.Scene();\n    const camera = new Three.PerspectiveCamera(60, window.innerWidth / window.innerHeight, .1, 1000);\n    const renderer = new Three.WebGLRenderer({\n      antialias: true,\n    });\n\n    const clock = new Three.Clock();\n    clock.start();\n    const stats = new Stat();\n    stats.showPanel(0);\n    document.body.appendChild(stats.dom);\n\n    camera.position.set(10, 2, 0);\n    \n    renderer.setSize(window.innerWidth, window.innerHeight);\n    // 0x0c0c0c\n    renderer.setClearColor(0x0c0c0c, 1);\n    document.querySelector(\"#main\").appendChild(renderer.domElement);\n\n    const orbitControl = new OrbitControls(camera, document.querySelector(\"#main\"));\n    const particleFire = new Particle();\n\n    scene.add(particleFire.particleSystem);\n    const axesHelper = new Three.AxesHelper(5);\n\n    // const geometry = new Three.PlaneGeometry( 10, 10);\n    // const material = new Three.MeshBasicMaterial( {color: 0x7d7d7d, side: Three.DoubleSide} );\n\n    // material.blending = Three.CustomBlending;\n    // material.blendSrc = Three.SrcAlphaFactor;\n    // material.blendDst = Three.ZeroFactor;\n\n    // const plane = new Three.Mesh( geometry, material );\n\n    // plane.translateY(-3);\n    // plane.rotateX(Math.PI / 2);\n\n    // scene.add( plane );\n    // scene.add(axesHelper);\n\n    const animate = () => {\n      stats.begin();\n      const elapsed = clock.getElapsedTime();\n\n      orbitControl.update();\n\n      particleFire.bulkSetAttrs(this.options);\n      particleFire.update(elapsed);\n      camera.lookAt( particleFire.particleSystem.position );\n  \n      renderer.render( scene, camera );\n      stats.end();\n      requestAnimationFrame(animate);\n    };\n\n    animate();\n\n    window.onresize = () => {\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n  }\n\n  configGUI = () => {\n    const gui = new dat.GUI();\n    for (let key in ParticleOptions) {\n      if (key === 'color') {\n        gui.addColor(this.options, key, ParticleOptions[key]);\n      } else {\n        gui.add(this.options, key, ParticleOptions[key].min, ParticleOptions[key].max)\n      }\n    }\n    return gui; \n  }\n\n  render() {\n    return <div id=\"main\">\n    </div>\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}