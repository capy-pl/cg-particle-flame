{"version":3,"sources":["ParticleFire/util.js","ParticleFire/Particle.js","ParticleFire/shaders/particle.vert","ParticleFire/shaders/particle.frag","OrbitContorls.js","App.js","reportWebVitals.js","index.js"],"names":["rgbArrToThreeColor","rgb","map","v","Three","MAXIMUM_PARTICLE_NUM","DEFAULT_FADING_SPEED","DEFAULT_RGB","DEFAULT_TEXTURE_OPTION","WIND_LOCATION","ParticleOptions","size","default","min","max","sizeVarience","speed","speedVarience","centrality","fadingSpeed","color","wind","windStrength","texture","options","PARTICLE_STATE","ParticleFire","setAttr","key","val","hasOwnProperty","undefined","material","uniforms","value","tex","loadTexture","bulkSetAttrs","k","setParticleNum","num","particleNum","i","particleState","alpha","init","appendParticle","particleNumber","index","particle","createParticle","position","x","y","z","vel","vec","ang","Math","PI","phi","random","randFloatSpread","theta","randFloat","sin","cos","randomStart","xrad","zrad","normalize","randomParticleVel","update","elapsed","pos","particleSystem","geometry","attributes","array","noiseGen","SimplexNoise","elapsedMs","prevElapsed","numShouldGen","currentPos","currentVel","windDirect","subVectors","length","turbulence","noise3D","addScalar","multiplyScalar","tanh","add","fadeFactor","needsUpdate","this","Float32Array","Uint8Array","time","center","setAttribute","wrapS","wrapT","minFilter","vertexShader","fragmentShader","blending","depthTest","transparent","blendSrc","blendDst","name","load","process","_changeEvent","type","_startEvent","_endEvent","OrbitControls","object","domElement","console","warn","document","error","style","touchAction","enabled","target","Vector3","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MOUSE","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TOUCH","TWO","DOLLY_PAN","target0","clone","position0","zoom0","zoom","_domElementKeyEvents","getPolarAngle","spherical","getAzimuthalAngle","getDistance","distanceTo","listenToKeyEvents","addEventListener","onKeyDown","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","state","STATE","NONE","offset","quat","Quaternion","setFromUnitVectors","up","quatInverse","invert","lastPosition","lastQuaternion","twoPI","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","isFinite","makeSafe","radius","scale","addScaledVector","panOffset","setFromSpherical","lookAt","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","removeEventListener","onContextMenu","onPointerDown","onPointerCancel","onMouseWheel","onPointerMove","onPointerUp","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","Spherical","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","getZoomScale","pow","angle","rotateUp","panLeft","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","dollyOut","dollyScale","dollyIn","handleMouseDownRotate","event","clientX","clientY","handleMouseDownPan","handleTouchStartRotate","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchMoveRotate","getSecondPointerPosition","handleTouchMovePan","handleTouchMoveDolly","setPointerCapture","pointerId","push","addPointer","pointerType","trackPointer","DOLLY_ROTATE","onTouchStart","mouseAction","button","handleMouseDownDolly","ctrlKey","metaKey","shiftKey","onMouseDown","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","onTouchMove","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","onMouseMove","removePointer","releasePointerCapture","preventDefault","handleMouseWheel","code","handleKeyDown","splice","pointer","passive","EventDispatcher","App","props","configGUI","gui","dat","addColor","show","scene","camera","window","innerWidth","innerHeight","renderer","antialias","clock","start","stats","Stat","showPanel","body","appendChild","dom","setSize","setClearColor","querySelector","orbitControl","particleFire","Particle","animate","begin","getElapsedTime","render","end","requestAnimationFrame","onresize","id","React","PureComponent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.106ecaba.chunk.js","sourcesContent":["import * as Three from 'three';\n\nconst randomDest = () => {\n  const randomEnd = new Three.Vector3();\n  randomEnd.x = Three.MathUtils.randFloatSpread(2);\n  randomEnd.z = Three.MathUtils.randFloatSpread(2);\n  randomEnd.y = 10;\n  return randomEnd;\n};\n\n// randomly pick a position in a sphere\nconst randomStart = () => {\n  const vec = new Three.Vector3();\n  const radius = 3;\n  const ang =  2 * Math.PI ;\n  const phi = Math.random() * ang + Three.MathUtils.randFloatSpread(0.2 * Math.PI);\n  const theta = Math.random() * ang + Three.MathUtils.randFloatSpread(0.2 * Math.PI);\n\n  vec.x = Three.MathUtils.randFloat(0, radius * Math.sin(phi) * Math.cos(theta));\n  vec.y = 0.2 * Three.MathUtils.randFloat(0, radius * Math.cos(phi));\n  vec.z = Three.MathUtils.randFloat(0, radius * Math.sin(phi) * Math.sin(theta));\n  return vec;\n};\n\nconst randomParticleVel = (centrality) => {\n  const vec = new Three.Vector3();\n  const xrad = 2 * Math.PI * Math.random() + Three.MathUtils.randFloatSpread(0.4 * Math.PI);\n  const zrad = 2 * Math.PI * Math.random() + Three.MathUtils.randFloatSpread(0.4 * Math.PI);\n  vec.x = Math.cos(xrad);\n  vec.y = centrality;\n  vec.z = Math.sin(zrad);\n  vec.normalize();\n  return vec;\n};\n\nconst random2DVec = (start, end) => {\n  const pos = start.clone();\n  const vec = new Three.Vector3().subVectors(end, start);\n  vec.multiplyScalar(Math.random());\n  pos.add(vec);\n  return pos;\n};\n\nconst unitDirection = (start, end) => {\n  return new Three.Vector3().subVectors(end, start).normalize();\n};\n\nconst rgbArrToThreeColor = (rgb) => {\n  rgb = rgb.map(v => v / 256);\n  return new Three.Color(rgb[0], rgb[1], rgb[2]);\n};\n\nexport {\n  randomDest,\n  randomStart,\n  random2DVec,\n  randomParticleVel,\n  unitDirection,\n  rgbArrToThreeColor\n};\n","import * as Three from 'three';\n\nimport {\n  randomStart,\n  randomParticleVel,\n  rgbArrToThreeColor,\n} from './util';\n\n\nimport vertexShader from './shaders/particle.vert';\nimport fragmentShader from './shaders/particle.frag';\nimport SimplexNoise from 'simplex-noise';\n\nconst MAXIMUM_PARTICLE_NUM = 6000;\nconst DEFAULT_PARTICLE_NUM = 3000;\n\nconst DEFAULT_SIZE = 0.6;\nconst MINIMUM_SIZE = 0.01\nconst MAXIMUM_SIZE = 4;\n\nconst DEFAULT_SIZE_VARIANCE = 0.5;\nconst MAX_SIZE_VARIANCE = 1;\nconst MIN_SIZE_VARIANCE = 0;\n\nconst DEFUALT_ALPHA = 0.6;\n\nconst DEFAULT_SPEED = 120;\nconst MAX_SPEED = 200;\nconst MIN_SPEED = 50;\n\n\nconst DEFAULT_SPEED_VARIANCE = 0.5;\nconst MAX_SPEED_VARIANCE = 1;\nconst MIN_SPEED_VARIANCE = 0;\n\nconst DEFAULT_FADING_SPEED = 0.0085;\nconst MAXIMUM_FADING_SPEED = 0.03;\nconst MINIMUM_FADING_SPEED = 0.001;\n\nconst MIN_CENTRALITY = 1;\nconst DEFAULT_CENTRALITY = 5;\nconst MAX_CENTRALITY = 10;\n\nconst DEFAULT_RGB = [245.82, 102, 25];\n\nconst DEFAULT_FIRE_HEIGHT = 10;\n\nconst DEFAULT_TEXTURE_OPTION = 'gradient.png';\n\nconst TEXTURE_OPTIONS = [\n  'gradient.png',\n  'explosion.png',\n  'flame.png',\n  'symbol_02.png',\n  'flame_03.png',\n  'smoke_05.png',\n  'star_01.png',\n  'muzzle_02.png',\n  'heart.png',\n  'smile.png'\n];\n\n// per second\nconst DEFAULT_PARTICLE_SPAWN_SPEED = 1600;\n\nconst WIND_LOCATION = new Three.Vector3(0, 1, 4);\n\nconst ParticleOptions = {\n  // particleNum: {\n  //   default: MAXIMUM_PARTICLE_NUM,\n  //   max: MAXIMUM_PARTICLE_NUM,\n  //   min: MINIMUM_PARTICLE_NUM,\n  // },\n  size: {\n    default: DEFAULT_SIZE,\n    min: MINIMUM_SIZE,\n    max: MAXIMUM_SIZE,\n  },\n  sizeVarience: {\n    default: DEFAULT_SIZE_VARIANCE,\n    min: MIN_SIZE_VARIANCE,\n    max: MAX_SIZE_VARIANCE,\n  },\n  speed: {\n    default: DEFAULT_SPEED,\n    min: MIN_SPEED,\n    max: MAX_SPEED,\n  },\n  speedVarience: {\n    default: DEFAULT_SPEED_VARIANCE,\n    min: MIN_SPEED_VARIANCE,\n    max: MAX_SPEED_VARIANCE,\n  },\n  centrality: {\n    default: DEFAULT_CENTRALITY,\n    min: MIN_CENTRALITY,\n    max: MAX_CENTRALITY,\n  },\n  fadingSpeed: {\n    default: DEFAULT_FADING_SPEED,\n    min: MINIMUM_FADING_SPEED,\n    max: MAXIMUM_FADING_SPEED,\n  },\n  color: {\n    default: DEFAULT_RGB,\n  },\n  wind: {\n    default: false,\n  },\n  windStrength: {\n    default: 5,\n    min: 1,\n    max: 10,\n  },\n  texture: {\n    default : DEFAULT_TEXTURE_OPTION,\n    options: TEXTURE_OPTIONS,\n  },\n};\n\nconst PARTICLE_STATE = {\n  DEACTIVE: 0,\n  ACTIVE: 1,\n};\n\nconst defaultTexture = 'gradient.png';\n\nexport default class ParticleFire {\n  constructor(options) {\n    this.options = {\n      size: DEFAULT_SIZE,\n      sizeVarience: DEFAULT_SIZE_VARIANCE,\n      speed: DEFAULT_SPEED,\n      speedVarience: DEFAULT_SPEED_VARIANCE,\n      fadingSpeed: DEFAULT_FADING_SPEED,\n      particleNum: DEFAULT_PARTICLE_NUM,\n      centrality: DEFAULT_CENTRALITY,\n      color: DEFAULT_RGB,\n      wind: false,\n      windStrength: 10,\n      texture: DEFAULT_TEXTURE_OPTION,\n    };\n\n    this.bulkSetAttrs(options);\n\n    this.position = new Float32Array(MAXIMUM_PARTICLE_NUM * 3);\n    this.vel = new Float32Array(MAXIMUM_PARTICLE_NUM * 3);\n    this.size = new Float32Array(MAXIMUM_PARTICLE_NUM);\n    this.speed = new Float32Array(MAXIMUM_PARTICLE_NUM);\n    this.alpha = new Float32Array(MAXIMUM_PARTICLE_NUM);\n    this.particleState = new Uint8Array(MAXIMUM_PARTICLE_NUM);\n\n    this.prevElapsed = 0;\n    this.time = 0;\n    this.particleNumber = 0;\n    this.numShouldGen = 0.0;\n\n    this.init();\n\n    this.center = new Three.Vector3(0, 0, 0);\n    this.geometry = new Three.BufferGeometry();\n\n    this.geometry.setAttribute('position', new Three.BufferAttribute(this.position, 3));\n    this.geometry.setAttribute('size', new Three.BufferAttribute(this.size, 1));\n    this.geometry.setAttribute('alpha', new Three.BufferAttribute(this.alpha, 1));\n\n    const texture = this.loadTexture(defaultTexture);\n    texture.wrapS = Three.ClampToEdgeWrapping;\n    texture.wrapT = Three.ClampToEdgeWrapping;\n    texture.minFilter = Three.LinearFilter;\n    const uniforms = {\n      tex : {\n        value: texture,\n      },\n      color: {\n        value: rgbArrToThreeColor(this.options.color),\n      }\n    };\n\n    this.material = new Three.ShaderMaterial({\n      vertexShader,\n      fragmentShader,\n      uniforms,\n      blending: Three.CustomBlending,\n\t\t\tdepthTest: false,\n\t\t\ttransparent: true\n    });\n\n    this.material.blending = Three.CustomBlending;\n    this.material.blendSrc = Three.SrcAlphaFactor;\n    this.material.blendDst = Three.DstAlphaFactor;\n\n    this.particleSystem = new Three.Points(this.geometry, this.material);\n  }\n\n  setAttr = (key, val) => {\n    if (this.options.hasOwnProperty(key) && val !== undefined && this.options[key] !== val) {\n      if (key === 'color') {\n        this.options[key] = rgbArrToThreeColor(val);\n        this.material.uniforms.color.value = this.options[key];\n      } else {\n        if (key === 'texture') {\n          this.material.uniforms.tex.value = this.loadTexture(val);\n        }\n        this.options[key] = val;\n      }\n    }\n  }\n\n  bulkSetAttrs = (options) => {\n    for (let k in options) {\n      this.setAttr(k, options[k]);\n    }\n  }\n\n  setParticleNum = (num) => {\n    if (num !== this.options.particleNum) {\n      for (let i = 0; i < MAXIMUM_PARTICLE_NUM; i++) {\n        if (i < num && this.particleState[i] === PARTICLE_STATE.DEACTIVE) {\n          this.particleState[i] = PARTICLE_STATE.ACTIVE;\n          this.alpha[i] = 0;\n        }\n        if (i >= num && this.particleState[i] === PARTICLE_STATE.ACTIVE) {\n          this.particleState[i] = PARTICLE_STATE.DEACTIVE;\n          this.alpha[i] = 0;\n        }\n      }\n      this.options.particleNum = num;\n    }\n  }\n\n  loadTexture(name) {\n    const loader = new Three.TextureLoader();\n    return loader.load(`${process.env.PUBLIC_URL}/${name}`);\n  }\n\n  init = () => {\n    for (let i = 0;i < MAXIMUM_PARTICLE_NUM; i++) {\n      this.alpha[i] = 0;\n      this.particleState[i] = PARTICLE_STATE.DEACTIVE;\n    }\n  }\n\n  appendParticle = () => {\n    const i = this.particleNumber;\n    this.particleState[i] = PARTICLE_STATE.ACTIVE;\n\n    let index = i * 3;\n    const particle = this.createParticle();\n\n    this.position[index] = particle.position.x;\n    this.position[index + 1] = particle.position.y;\n    this.position[index + 2] = particle.position.z;\n\n    this.vel[index] = particle.vel.x;\n    this.vel[index + 1] = particle.vel.y;\n    this.vel[index + 2] = particle.vel.z;\n\n    this.size[i] = particle.size;\n    this.speed[i] = particle.speed;\n    this.alpha[i] = DEFUALT_ALPHA;\n    this.particleNumber += 1;\n}\n\n  createParticle = () => {\n    const start = randomStart();\n    const vel = randomParticleVel(this.options.centrality);\n    const speed = this.options.speed + Three.MathUtils.randFloatSpread(\n      this.options.speed * this.options.speedVarience\n    );\n    const size = this.options.size + Three.MathUtils.randFloatSpread(\n      this.options.size * this.options.sizeVarience\n    );\n    return {\n      position: start,\n      vel, \n      speed,\n      size,\n    };\n  }\n\n  update = (elapsed) => {\n    const pos = this.particleSystem.geometry.attributes.position.array;\n    const alpha = this.particleSystem.geometry.attributes.alpha.array;\n    const noiseGen = new SimplexNoise(elapsed);\n\n    const elapsedMs = elapsed - this.prevElapsed;\n    this.prevElapsed = elapsed;\n\n    if (this.particleNumber < this.options.particleNum) {\n      this.numShouldGen += elapsedMs * DEFAULT_PARTICLE_SPAWN_SPEED;\n      while (this.numShouldGen > 0.0) {\n        this.appendParticle();\n        this.numShouldGen -= 1.0;\n      }\n    }\n\n    for(let i = 0;i < this.particleNumber; i++) {\n      let index = i * 3;\n\n      if (alpha[i] <= 0) {\n        const particle = this.createParticle();\n\n        pos[index] = particle.position.x;\n        pos[index + 1] = particle.position.y;\n        pos[index + 2] = particle.position.z;  \n\n        this.vel[index] = particle.vel.x;\n        this.vel[index + 1] = particle.vel.y;\n        this.vel[index + 2] = particle.vel.z;\n\n        this.speed[i] = particle.speed;\n        this.size[i] = particle.size;\n        alpha[i] = 0.6;\n      } else {\n        const speed = this.speed[i] / 1000;\n\n        if (!this.options.wind) {\n          pos[index] += this.vel[index] * speed;\n          pos[index + 1] += this.vel[index + 1] * speed;\n          pos[index + 2] += this.vel[index + 2] * speed;  \n        } else {\n          const currentPos = new Three.Vector3(pos[index], pos[index + 1], pos[index + 2]);\n          const currentVel = new Three.Vector3(this.vel[index], this.vel[index + 1], this.vel[index + 2]);\n          const windDirect = new Three.Vector3().subVectors(WIND_LOCATION, currentPos);\n          const windStrength = windDirect.length();\n          const turbulence = noiseGen.noise3D(pos[index], 100, pos[index + 2]);\n\n          windDirect\n            .normalize()\n            .addScalar(turbulence)\n            .multiplyScalar(Math.tanh(this.options.windStrength / windStrength));\n\n          currentVel\n            .add(windDirect)\n            .normalize();\n\n          pos[index] += currentVel.x * speed;\n          pos[index + 1] += currentVel.y * speed;\n          pos[index + 2] += currentVel.z * speed;\n        }\n\n\n        const fadeFactor = new Three.Vector2(pos[index], pos[index + 2]).length();\n        alpha[i] -= this.options.fadingSpeed + Math.tanh(1.5 * fadeFactor) * 0.01;\n      }\n    }\n\n    this.particleSystem.geometry.attributes.size.needsUpdate = true;\n    this.particleSystem.geometry.attributes.position.needsUpdate = true;\n    this.particleSystem.geometry.attributes.alpha.needsUpdate = true;\n  }\n}\n\nexport {\n  ParticleOptions\n};\n","export default \"attribute float size;\\nattribute float alpha;\\n\\nvarying float v_alpha;\\n\\nvoid main() {\\n    vec4 mvPos = modelViewMatrix * vec4(position, 1.0);\\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n    gl_PointSize = 600.0 * size / length(mvPos.xyz);\\n    v_alpha = alpha;\\n}\";","export default \"uniform sampler2D tex;\\nuniform vec3 color;\\nvarying float v_alpha;\\n\\nvoid main() {\\n    gl_FragColor = vec4(color, v_alpha) * texture2D(tex, gl_PointCoord);\\n}\";","import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3\n} from 'three';\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\n\nclass OrbitControls extends EventDispatcher {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper();\n\n\t\tif ( domElement === undefined ) console.warn( 'THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.' );\n\t\tif ( domElement === document ) console.error( 'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.' );\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t//\n\t\t// public methods\n\t\t//\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn spherical.phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn spherical.theta;\n\n\t\t};\n\n\t\tthis.getDistance = function () {\n\n\t\t\treturn this.object.position.distanceTo( this.target );\n\n\t\t};\n\n\t\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = domElement;\n\n\t\t};\n\n\t\tthis.saveState = function () {\n\n\t\t\tscope.target0.copy( scope.target );\n\t\t\tscope.position0.copy( scope.object.position );\n\t\t\tscope.zoom0 = scope.object.zoom;\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\tscope.update();\n\n\t\t\tstate = STATE.NONE;\n\n\t\t};\n\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\n\t\tthis.update = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tconst quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\t\tconst quatInverse = quat.clone().invert();\n\n\t\t\tconst lastPosition = new Vector3();\n\t\t\tconst lastQuaternion = new Quaternion();\n\n\t\t\tconst twoPI = 2 * Math.PI;\n\n\t\t\treturn function update() {\n\n\t\t\t\tconst position = scope.object.position;\n\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\trotateLeft( getAutoRotationAngle() );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t}\n\n\t\t\t\t// restrict theta to be between desired limits\n\n\t\t\t\tlet min = scope.minAzimuthAngle;\n\t\t\t\tlet max = scope.maxAzimuthAngle;\n\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\t\tspherical.makeSafe();\n\n\n\t\t\t\tspherical.radius *= scale;\n\n\t\t\t\t// restrict radius to be between desired limits\n\t\t\t\tspherical.radius = Math.max( scope.minDistance, Math.min( scope.maxDistance, spherical.radius ) );\n\n\t\t\t\t// move target to panned location\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\t}\n\n\t\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ) {\n\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tzoomChanged = false;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function () {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\tscope.domElement.removeEventListener( 'pointercancel', onPointerCancel );\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\n\t\t\t}\n\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t};\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tconst scope = this;\n\n\t\tconst STATE = {\n\t\t\tNONE: - 1,\n\t\t\tROTATE: 0,\n\t\t\tDOLLY: 1,\n\t\t\tPAN: 2,\n\t\t\tTOUCH_ROTATE: 3,\n\t\t\tTOUCH_PAN: 4,\n\t\t\tTOUCH_DOLLY_PAN: 5,\n\t\t\tTOUCH_DOLLY_ROTATE: 6\n\t\t};\n\n\t\tlet state = STATE.NONE;\n\n\t\tconst EPS = 0.000001;\n\n\t\t// current position in spherical coordinates\n\t\tconst spherical = new Spherical();\n\t\tconst sphericalDelta = new Spherical();\n\n\t\tlet scale = 1;\n\t\tconst panOffset = new Vector3();\n\t\tlet zoomChanged = false;\n\n\t\tconst rotateStart = new Vector2();\n\t\tconst rotateEnd = new Vector2();\n\t\tconst rotateDelta = new Vector2();\n\n\t\tconst panStart = new Vector2();\n\t\tconst panEnd = new Vector2();\n\t\tconst panDelta = new Vector2();\n\n\t\tconst dollyStart = new Vector2();\n\t\tconst dollyEnd = new Vector2();\n\t\tconst dollyDelta = new Vector2();\n\n\t\tconst pointers = [];\n\t\tconst pointerPositions = {};\n\n\t\tfunction getAutoRotationAngle() {\n\n\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction rotateLeft( angle ) {\n\n\t\t\tsphericalDelta.theta -= angle;\n\n\t\t}\n\n\t\tfunction rotateUp( angle ) {\n\n\t\t\tsphericalDelta.phi -= angle;\n\n\t\t}\n\n\t\tconst panLeft = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tconst panUp = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t\t}\n\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// deltaX and deltaY are in pixels; right and down are positive\n\t\tconst pan = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\t\tconst element = scope.domElement;\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t// perspective\n\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\tlet targetDistance = offset.length();\n\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t// orthographic\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}();\n\n\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom * dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\t\t// event callbacks - update the object state\n\t\t//\n\n\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseWheel( event ) {\n\n\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleKeyDown( event ) {\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tswitch ( event.code ) {\n\n\t\t\t\tcase scope.keys.UP:\n\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction handleTouchStartRotate() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\trotateStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\trotateStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartPan() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\tpanStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartDolly() {\n\n\t\t\tconst dx = pointers[ 0 ].pageX - pointers[ 1 ].pageX;\n\t\t\tconst dy = pointers[ 0 ].pageY - pointers[ 1 ].pageY;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyPan() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enablePan ) handleTouchStartPan();\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyRotate() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate();\n\n\t\t}\n\n\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\tif ( pointers.length == 1 ) {\n\n\t\t\t\trotateEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\trotateEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\tpanEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\tconst dx = event.pageX - position.x;\n\t\t\tconst dy = event.pageY - position.y;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyOut( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t\t}\n\n\t\t//\n\t\t// event handlers - FSM: listen for events and reset state\n\t\t//\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.setPointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.addEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\taddPointer( event );\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchStart( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseDown( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchMove( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseMove( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerUp( event ) {\n\n\t\t    removePointer( event );\n\n\t\t    if ( pointers.length === 0 ) {\n\n\t\t        scope.domElement.releasePointerCapture( event.pointerId );\n\n\t\t        scope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t        scope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t    }\n\n\t\t    scope.dispatchEvent( _endEvent );\n\n\t\t    state = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onPointerCancel( event ) {\n\n\t\t\tremovePointer( event );\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tlet mouseAction;\n\n\t\t\tswitch ( event.button ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tmouseAction = - 1;\n\n\t\t\t}\n\n\t\t\tswitch ( mouseAction ) {\n\n\t\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.PAN:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\thandleMouseWheel( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\t\thandleKeyDown( event );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( pointers.length ) {\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onContextMenu( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\tfunction addPointer( event ) {\n\n\t\t\tpointers.push( event );\n\n\t\t}\n\n\t\tfunction removePointer( event ) {\n\n\t\t\tdelete pointerPositions[ event.pointerId ];\n\n\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\n\n\t\t\t\tif ( pointers[ i ].pointerId == event.pointerId ) {\n\n\t\t\t\t\tpointers.splice( i, 1 );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction trackPointer( event ) {\n\n\t\t\tlet position = pointerPositions[ event.pointerId ];\n\n\t\t\tif ( position === undefined ) {\n\n\t\t\t\tposition = new Vector2();\n\t\t\t\tpointerPositions[ event.pointerId ] = position;\n\n\t\t\t}\n\n\t\t\tposition.set( event.pageX, event.pageY );\n\n\t\t}\n\n\t\tfunction getSecondPointerPosition( event ) {\n\n\t\t\tconst pointer = ( event.pointerId === pointers[ 0 ].pointerId ) ? pointers[ 1 ] : pointers[ 0 ];\n\n\t\t\treturn pointerPositions[ pointer.pointerId ];\n\n\t\t}\n\n\t\t//\n\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.addEventListener( 'pointercancel', onPointerCancel );\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\n\n\t\t// force an update at start\n\n\t\tthis.update();\n\n\t}\n\n}\n\nexport default OrbitControls;","import React from 'react';\nimport * as Three from 'three';\nimport Stat from 'stats.js';\nimport * as dat from 'dat.gui';\n\nimport { Particle } from './ParticleFire';\nimport {\n  ParticleOptions\n} from './ParticleFire/Particle';\n\nimport OrbitControls from './OrbitContorls';\n\nclass App extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.options = {};\n    for (let key in ParticleOptions) {\n      this.options[key] = ParticleOptions[key].default;\n    }\n  }\n\n  componentDidMount() {\n    const gui = this.configGUI();\n\n    gui.show();\n\n    const scene = new Three.Scene();\n    const camera = new Three.PerspectiveCamera(60, window.innerWidth / window.innerHeight, .1, 1000);\n    const renderer = new Three.WebGLRenderer({\n      antialias: true,\n    });\n\n    const clock = new Three.Clock();\n    clock.start();\n    const stats = new Stat();\n    stats.showPanel(0);\n    document.body.appendChild(stats.dom);\n\n    camera.position.set(10, 2, 0);\n    \n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setClearColor(0x0c0c0c, 1);\n    document.querySelector(\"#main\").appendChild(renderer.domElement);\n\n    const orbitControl = new OrbitControls(camera, document.querySelector(\"#main\"));\n    const particleFire = new Particle();\n\n    scene.add(particleFire.particleSystem);\n\n    const animate = () => {\n      stats.begin();\n      const elapsed = clock.getElapsedTime();\n\n      orbitControl.update();\n\n      particleFire.bulkSetAttrs(this.options);\n      particleFire.update(elapsed);\n\n      camera.lookAt( particleFire.particleSystem.position );\n  \n      renderer.render( scene, camera );\n      stats.end();\n      requestAnimationFrame(animate);\n    };\n\n    animate();\n\n    window.onresize = () => {\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n  }\n\n  configGUI = () => {\n    const gui = new dat.GUI();\n    for (let key in ParticleOptions) {\n      if (key === 'color') {\n        gui.addColor(this.options, key, ParticleOptions[key]);\n      } else if (key === 'texture') {\n        gui.add(this.options, key, ParticleOptions[key].options);\n      }\n      else {\n        gui.add(this.options, key, ParticleOptions[key].min, ParticleOptions[key].max)\n      }\n    }\n    return gui; \n  }\n\n  render() {\n    return <div id=\"main\">\n    </div>\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}